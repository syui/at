services:
  plc:
    ports:
      - 2582:3000
    build:
      context: ./repos/did-method-plc/
      dockerfile: packages/server/Dockerfile
    restart: always
    env_file:
      - ./.env/plc
    healthcheck:
      test: "wget -q --spider http://localhost:3000/_health"
      interval: 5s
      retries: 20
    depends_on:
      postgres:
        condition: service_healthy

  bgs:
    ports:
      - 2470:2470
    build:
      context: ./repos/indigo/
      dockerfile: cmd/bigsky/Dockerfile
    restart: always
    env_file:
      - ./.env/bgs
    volumes:
      - ./data/bgs/:/data/
    healthcheck:
      test: "wget -q --spider http://localhost:2470/xrpc/_health"
      interval: 5s
      retries: 20
    depends_on:
      postgres:
        condition: service_healthy
  bsky-fix-permission:
    image: alpine:latest
    volumes:
      - ./data/bsky/cache/:/cache/
    command: chown 1000.1000 /cache

  bsky:
    ports:
      - 2584:3000
    build:
      context: ./repos/atproto/
      dockerfile: services/bsky/Dockerfile
    restart: always
    env_file:
      - ./.env/bsky
    volumes:
      - ./data/bsky/cache/:/cache/
    healthcheck:
      test: "wget -q --spider http://localhost:3000/xrpc/_health"
      interval: 5s
      retries: 20
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      bsky-fix-permission:
        condition: service_completed_successfully

  bsky-daemon:
    build:
      context: ./repos/atproto/
      dockerfile: services/bsky/Dockerfile
    restart: always
    command: node --enable-source-maps daemon.js
    env_file:
      - ./.env/bsky
    volumes:
      - ./data/bsky/cache/:/cache/
    depends_on:
      bsky:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      bsky-fix-permission:
        condition: service_completed_successfully

  bsky-indexer:
    build:
      context: ./repos/atproto/
      dockerfile: services/bsky/Dockerfile
    restart: always
    command: node --enable-source-maps indexer.js
    env_file:
      - ./.env/bsky
    volumes:
      - ./data/bsky/cache/:/cache/
    depends_on:
      bsky:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      bsky-fix-permission:
        condition: service_completed_successfully

  bsky-ingester:
    build:
      context: ./repos/atproto/
      dockerfile: services/bsky/Dockerfile
    restart: always
    command: node --enable-source-maps ingester.js
    env_file:
      - ./.env/bsky
    volumes:
      - ./data/bsky/cache/:/cache/
    depends_on:
      bsky:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      bsky-fix-permission:
        condition: service_completed_successfully

  mod:
    ports:
      - 2585:3000
    build:
      context: ./repos/atproto/
      dockerfile: services/ozone/Dockerfile
    restart: always
    env_file:
      - ./.env/mod
    healthcheck:
      test: "wget -q --spider http://localhost:3000/xrpc/_health"
      interval: 5s
      retries: 20
    depends_on:
      postgres:
        condition: service_healthy

  mod-daemon:
    build:
      context: ./repos/atproto/
      dockerfile: services/ozone/Dockerfile
    restart: always
    command: node --enable-source-maps daemon.js
    env_file:
      - ./.env/mod
    depends_on:
      mod:
        condition: service_healthy
      postgres:
        condition: service_healthy

  pds-fix-permission:
    image: alpine:latest
    volumes:
      - ./data/pds/:/data/
    command: chown 1000.1000 /data

  pds:
    ports:
      - 2583:3000
    build:
      context: ./repos/atproto/
      dockerfile: services/pds/Dockerfile
    restart: always
    env_file:
      - ./.env/pds
    volumes:
      - ./data/pds/:/data/
    healthcheck:
      test: "wget -q --spider http://localhost:3000/xrpc/_health"
      interval: 5s
      retries: 20
    depends_on:
      postgres:
        condition: service_healthy
      pds-fix-permission:
        condition: service_completed_successfully

  app:
    ports:
      - 8100:8100
    build:
      context: ./repos/social-app/
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./.env/app
    command: "/usr/bin/bskyweb serve"

  postgres:
    image: postgres:16-alpine
    restart: always
    env_file:
      - ./.env/postgres
    volumes:
      - ./postgres/init/:/docker-entrypoint-initdb.d/
      - ./data/postgres/:/var/lib/postgresql/data/
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 20

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - ./data/redis/:/data/
    healthcheck:
      test: ["CMD", "redis-cli", "ping", "|", "grep", "PONG"]
      interval: 1s
      timeout: 5s
      retries: 5

